from django.shortcuts import render, render_to_response
from django.contrib.auth import authenticate, login, logout
from django.contrib.auth.models import User
from Dash.forms import UserForm, UserProfileForm
from helpers import safe_get

def index(request):
    context = RequestContext(request)
    return render_to_response('Dash/index.html')

def home(request):
    context_dict = safe_get(request)
    return render(request, 'Dash/homepage.html', context=context_dict)

def contact(request):
    context_dict = {}
    context_dict['user'] = User.objects.get(username=request.user)
    return render(request, 'Dash/contact.html', context=context_dict)

def about(request):
    context_dict = {}
    context_dict['user'] = User.objects.get(username=request.user)
    return render(request, 'Dash/about.html', context=context_dict)

def pricing(request):
    context_dict = {}
    context_dict['user'] = User.objects.get(username=request.user)
    return render(request, 'Dash/pricing.html', context=context_dict)

def thank_you(request):
    context_dict = {}
    context_dict['user'] = User.objects.get(username=request.user)
    return render(request, 'Dash/thank_you.html', context=context_dict)


def profile(request):
    context_dict = {}
    u = User.objects.get(username=request.user)
    try:
        up = UserProfile.objects.get(user=u)
    except:
        up = None

    context_dict['user'] = u
    context_dict['userprofile'] = up
    return render(request, 'Dash/profile.html', context=context_dict)

def features(request):
    context_dict = {}
    context_dict['user'] = User.objects.get(username=request.user)
    return render(request, 'Dash/features.html', context=context_dict)



''' Not needed because django has built-in forms and views for usercreation
def register(request):
    context = RequestContext(request)
    registered = False

    if request.method == "POST":
        user_form = UserForm(data=request.POST)
        profile_form = UserProfileForm(data=request.POST)
        
        if user_form.is_valid() and profile_form.is_valid():
            user = user_form.save()
            user.set_password(user.password)
            user.save()

            profile = profile_form.save(commit=False)
            profile.user = user
            profile.save()

            registered = True

        else:
            print(user_form.errors, profile_form.errors)

    else:
        user_form = UserForm()
        profile_form = UserProfileForm()
        
    return render(request, 'registration/register.html',
                  {'user_form':user_form, "profile_form": profile_form,
                   "registered": registered})
'''

 
